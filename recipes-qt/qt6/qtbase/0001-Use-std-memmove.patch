From 4825c4e8226d05a52b1e116d9521ea2f2e09e392 Mon Sep 17 00:00:00 2001
From: Samuli Piippo <samuli.piippo@qt.io>
Date: Mon, 29 Jun 2020 14:37:55 +0300
Subject: [PATCH] Use std::memmove

... and add include for it.
Amends ffb73175e6c5b35e6367c88479cc0bf160482016

Change-Id: I709a5aed13f6f62017b9e4116a03a4dfaae4bb13
---
 src/corelib/tools/qcontainertools_impl.h | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/corelib/tools/qcontainertools_impl.h b/src/corelib/tools/qcontainertools_impl.h
index b43c3bb1c4..44cfdc444e 100644
--- a/src/corelib/tools/qcontainertools_impl.h
+++ b/src/corelib/tools/qcontainertools_impl.h
@@ -49,6 +49,7 @@
 #include <QtCore/qglobal.h>
 #include <QtCore/qtypeinfo.h>
 
+#include <cstring>
 #include <iterator>
 #include <memory>
 
@@ -62,9 +63,9 @@ void q_uninitialized_relocate_n(T* first, N n, T* out)
 {
     if constexpr (QTypeInfoQuery<T>::isRelocatable) {
         if (n != N(0)) { // even if N == 0, out == nullptr or first == nullptr are UB for memmove()
-            memmove(static_cast<void*>(out),
-                    static_cast<const void*>(first),
-                    n * sizeof(T));
+            std::memmove(static_cast<void*>(out),
+                         static_cast<const void*>(first),
+                         n * sizeof(T));
         }
     } else {
         std::uninitialized_move_n(first, n, out);
-- 
2.25.1

