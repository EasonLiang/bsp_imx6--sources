From e45d0c593446abaf537cf778cfc2081b77cacd17 Mon Sep 17 00:00:00 2001
From: Paul Lemire <paul.lemire@kdab.com>
Date: Fri, 7 Aug 2020 12:51:36 +0200
Subject: [PATCH] Update scene3drenderer to latest changes in qtdeclarative

Change-Id: I9b4a3e3afc1adeda014242ff8fd53ceac9ab5d85
---
 src/quick3d/imports/scene3d/scene3drenderer.cpp | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/src/quick3d/imports/scene3d/scene3drenderer.cpp b/src/quick3d/imports/scene3d/scene3drenderer.cpp
index 051f08909..0d5d2cf5c 100644
--- a/src/quick3d/imports/scene3d/scene3drenderer.cpp
+++ b/src/quick3d/imports/scene3d/scene3drenderer.cpp
@@ -391,8 +391,7 @@ void Scene3DRenderer::GLRenderer::beforeSynchronize(Scene3DRenderer *scene3DRend
         if (generateNewTexture) {
             m_finalFBO.reset(createFramebufferObject(m_lastSize));
             m_textureId = m_finalFBO->texture();
-            m_texture.reset(window->createTextureFromNativeObject(QQuickWindow::NativeObjectTexture, m_textureId,
-                                                                    0, m_finalFBO->size(), QQuickWindow::TextureHasAlphaChannel));
+            m_texture.reset(QPlatformInterface::QSGOpenGLTexture::fromNative(m_textureId, window, m_finalFBO->size(), QQuickWindow::TextureHasAlphaChannel));
         }
 
         // We can render either the Scene3D or the Scene3DView but not both
@@ -606,9 +605,9 @@ void Scene3DRenderer::RHIRenderer::beforeSynchronize(Scene3DRenderer *scene3DRen
         m_rhiRenderTarget->create();
 
         // Create QSGTexture from QRhiTexture
-        m_texture.reset(window->createTextureFromNativeObject(QQuickWindow::NativeObjectTexture,
-                                                              m_rhiTexture->nativeTexture().object,
-                                                              0, m_lastSize, QQuickWindow::TextureHasAlphaChannel));
+        auto *windowPriv = QQuickWindowPrivate::get(window);
+        m_texture.reset(windowPriv->createTextureFromNativeTexture(m_rhiTexture->nativeTexture().object,
+                                                                   0, m_lastSize, QQuickWindow::TextureHasAlphaChannel));
 
         // Set the Default RenderTarget to use on the RHI Renderer
         // Note: this will release all pipelines using previousRenderTarget
