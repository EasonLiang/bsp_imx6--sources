From 356d4ec93a9a70584b705c663c8eea381d973b4d Mon Sep 17 00:00:00 2001
From: Samuli Piippo <samuli.piippo@qt.io>
Date: Thu, 8 Oct 2020 16:46:16 +0300
Subject: [PATCH] Update QStringConverter usage

Change-Id: I04a8e5bbd4caf2d1f5b263ddca8f06ebd63b300d
---
 src/assistant/help/qhelpsearchindexwriter_default.cpp | 2 +-
 src/assistant/qhelpgenerator/helpgenerator.cpp        | 4 ++--
 src/linguist/shared/qm.cpp                            | 2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/assistant/help/qhelpsearchindexwriter_default.cpp b/src/assistant/help/qhelpsearchindexwriter_default.cpp
index 2e70ffaa..a814598f 100644
--- a/src/assistant/help/qhelpsearchindexwriter_default.cpp
+++ b/src/assistant/help/qhelpsearchindexwriter_default.cpp
@@ -502,7 +502,7 @@ void QHelpSearchIndexWriter::run()
                 }
 
                 QTextStream s(data);
-                auto encoding = QStringDecoder::encodingForHtml(data.constData(), data.size());
+                auto encoding = QStringDecoder::encodingForHtml(data);
                 if (encoding)
                     s.setEncoding(*encoding);
 
diff --git a/src/assistant/qhelpgenerator/helpgenerator.cpp b/src/assistant/qhelpgenerator/helpgenerator.cpp
index 6e1db70b..d251e5f4 100644
--- a/src/assistant/qhelpgenerator/helpgenerator.cpp
+++ b/src/assistant/qhelpgenerator/helpgenerator.cpp
@@ -484,7 +484,7 @@ bool HelpGeneratorPrivate::insertFiles(const QStringList &files, const QString &
         QByteArray data = fi.readAll();
         if (fileName.endsWith(QLatin1String(".html"))
             || fileName.endsWith(QLatin1String(".htm"))) {
-                auto encoding = QStringDecoder::encodingForHtml(data.constData(), data.size());
+                auto encoding = QStringDecoder::encodingForHtml(data);
                 if (!encoding)
                     encoding = QStringDecoder::Utf8;
                 title = QHelpGlobal::documentTitle(QStringDecoder(*encoding)(data));
@@ -809,7 +809,7 @@ bool HelpGeneratorPrivate::checkLinks(const QHelpProjectData &helpData)
         }
         const QRegularExpression linkPattern(QLatin1String("<(?:a href|img src)=\"?([^#\">]+)[#\">]"));
         QByteArray data = htmlFile.readAll();
-        auto encoding = QStringDecoder::encodingForHtml(data.constData(), data.size());
+        auto encoding = QStringDecoder::encodingForHtml(data);
         if (!encoding)
             encoding = QStringDecoder::Utf8;
         const QString &content = QStringDecoder(*encoding)(data);
diff --git a/src/linguist/shared/qm.cpp b/src/linguist/shared/qm.cpp
index 6eb9c874..0863a302 100644
--- a/src/linguist/shared/qm.cpp
+++ b/src/linguist/shared/qm.cpp
@@ -452,7 +452,7 @@ static quint32 read32(const uchar *data)
 static void fromBytes(const char *str, int len, QString *out, bool *utf8Fail)
 {
     QStringDecoder toUnicode(QStringDecoder::Utf8, QStringDecoder::Flag::Stateless);
-    *out = toUnicode(str, len);
+    *out = toUnicode(QByteArrayView(str, len));
     *utf8Fail = toUnicode.hasError();
 }
 
