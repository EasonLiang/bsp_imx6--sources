From 52ee886359ff732e76fca0427e0ba007cbbb9e2c Mon Sep 17 00:00:00 2001
From: Volker Hilsheimer <volker.hilsheimer@qt.io>
Date: Tue, 25 Aug 2020 12:42:25 +0200
Subject: [PATCH] Adapt to rename of QFont/QPalette::resolve to resolveMask

Change-Id: I2876812653ddd451bb7c2f21d536b5e0196f0a94
---
 src/quicktemplates2/qquickapplicationwindow.cpp | 4 ++--
 src/quicktemplates2/qquickcontrol.cpp           | 4 ++--
 src/quicktemplates2/qquickcontrol_p_p.h         | 2 +-
 src/quicktemplates2/qquicklabel.cpp             | 4 ++--
 src/quicktemplates2/qquicklabel_p_p.h           | 2 +-
 src/quicktemplates2/qquicktextarea.cpp          | 4 ++--
 src/quicktemplates2/qquicktextarea_p_p.h        | 2 +-
 src/quicktemplates2/qquicktextfield.cpp         | 4 ++--
 src/quicktemplates2/qquicktextfield_p_p.h       | 2 +-
 src/quicktemplates2/qquicktheme.cpp             | 4 ++--
 10 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/src/quicktemplates2/qquickapplicationwindow.cpp b/src/quicktemplates2/qquickapplicationwindow.cpp
index 3d39a04ee..c825a0639 100644
--- a/src/quicktemplates2/qquickapplicationwindow.cpp
+++ b/src/quicktemplates2/qquickapplicationwindow.cpp
@@ -147,7 +147,7 @@ public:
 
     void updateFont(const QFont &f);
     inline void setFont_helper(const QFont &f) {
-        if (font.resolve() == f.resolve() && font == f)
+        if (font.resolveMask() == f.resolveMask() && font == f)
             return;
         updateFont(f);
     }
@@ -611,7 +611,7 @@ QFont QQuickApplicationWindow::font() const
 void QQuickApplicationWindow::setFont(const QFont &font)
 {
     Q_D(QQuickApplicationWindow);
-    if (d->font.resolve() == font.resolve() && d->font == font)
+    if (d->font.resolveMask() == font.resolveMask() && d->font == font)
         return;
 
     QFont resolvedFont = font.resolve(QQuickTheme::font(QQuickTheme::System));
diff --git a/src/quicktemplates2/qquickcontrol.cpp b/src/quicktemplates2/qquickcontrol.cpp
index 22b7f922f..86b2600d8 100644
--- a/src/quicktemplates2/qquickcontrol.cpp
+++ b/src/quicktemplates2/qquickcontrol.cpp
@@ -562,7 +562,7 @@ void QQuickControlPrivate::inheritFont(const QFont &font)
 {
     Q_Q(QQuickControl);
     QFont parentFont = extra.isAllocated() ? extra->requestedFont.resolve(font) : font;
-    parentFont.resolve(extra.isAllocated() ? extra->requestedFont.resolve() | font.resolve() : font.resolve());
+    parentFont.setResolveMask(extra.isAllocated() ? extra->requestedFont.resolveMask() | font.resolveMask() : font.resolveMask());
 
     const QFont defaultFont = q->defaultFont();
     QFont resolvedFont = parentFont.resolve(defaultFont);
@@ -973,7 +973,7 @@ QFont QQuickControl::font() const
 void QQuickControl::setFont(const QFont &font)
 {
     Q_D(QQuickControl);
-    if (d->extra.value().requestedFont.resolve() == font.resolve() && d->extra.value().requestedFont == font)
+    if (d->extra.value().requestedFont.resolveMask() == font.resolveMask() && d->extra.value().requestedFont == font)
         return;
 
     d->extra.value().requestedFont = font;
diff --git a/src/quicktemplates2/qquickcontrol_p_p.h b/src/quicktemplates2/qquickcontrol_p_p.h
index 116e8745c..15d0ef743 100644
--- a/src/quicktemplates2/qquickcontrol_p_p.h
+++ b/src/quicktemplates2/qquickcontrol_p_p.h
@@ -139,7 +139,7 @@ public:
     void updateFont(const QFont &font);
     static void updateFontRecur(QQuickItem *item, const QFont &font);
     inline void setFont_helper(const QFont &font) {
-        if (resolvedFont.resolve() == font.resolve() && resolvedFont == font)
+        if (resolvedFont.resolveMask() == font.resolveMask() && resolvedFont == font)
             return;
         updateFont(font);
     }
diff --git a/src/quicktemplates2/qquicklabel.cpp b/src/quicktemplates2/qquicklabel.cpp
index 144d2fe7d..183b0f803 100644
--- a/src/quicktemplates2/qquicklabel.cpp
+++ b/src/quicktemplates2/qquicklabel.cpp
@@ -180,7 +180,7 @@ void QQuickLabelPrivate::resolveFont()
 void QQuickLabelPrivate::inheritFont(const QFont &font)
 {
     QFont parentFont = extra.isAllocated() ? extra->requestedFont.resolve(font) : font;
-    parentFont.resolve(extra.isAllocated() ? extra->requestedFont.resolve() | font.resolve() : font.resolve());
+    parentFont.setResolveMask(extra.isAllocated() ? extra->requestedFont.resolveMask() | font.resolveMask() : font.resolveMask());
 
     const QFont defaultFont = QQuickTheme::font(QQuickTheme::Label);
     QFont resolvedFont = parentFont.resolve(defaultFont);
@@ -329,7 +329,7 @@ QFont QQuickLabel::font() const
 void QQuickLabel::setFont(const QFont &font)
 {
     Q_D(QQuickLabel);
-    if (d->extra.value().requestedFont.resolve() == font.resolve() && d->extra.value().requestedFont == font)
+    if (d->extra.value().requestedFont.resolveMask() == font.resolveMask() && d->extra.value().requestedFont == font)
         return;
 
     d->extra.value().requestedFont = font;
diff --git a/src/quicktemplates2/qquicklabel_p_p.h b/src/quicktemplates2/qquicklabel_p_p.h
index deed89f53..a9bda6717 100644
--- a/src/quicktemplates2/qquicklabel_p_p.h
+++ b/src/quicktemplates2/qquicklabel_p_p.h
@@ -93,7 +93,7 @@ public:
     void inheritFont(const QFont &font);
     void updateFont(const QFont &font);
     inline void setFont_helper(const QFont &font) {
-        if (sourceFont.resolve() == font.resolve() && sourceFont == font)
+        if (sourceFont.resolveMask() == font.resolveMask() && sourceFont == font)
             return;
         updateFont(font);
     }
diff --git a/src/quicktemplates2/qquicktextarea.cpp b/src/quicktemplates2/qquicktextarea.cpp
index 3495cb024..a740447f7 100644
--- a/src/quicktemplates2/qquicktextarea.cpp
+++ b/src/quicktemplates2/qquicktextarea.cpp
@@ -260,7 +260,7 @@ void QQuickTextAreaPrivate::resolveFont()
 void QQuickTextAreaPrivate::inheritFont(const QFont &font)
 {
     QFont parentFont = extra.isAllocated() ? extra->requestedFont.resolve(font) : font;
-    parentFont.resolve(extra.isAllocated() ? extra->requestedFont.resolve() | font.resolve() : font.resolve());
+    parentFont.setResolveMask(extra.isAllocated() ? extra->requestedFont.resolveMask() | font.resolveMask() : font.resolveMask());
 
     const QFont defaultFont = QQuickTheme::font(QQuickTheme::TextArea);
     QFont resolvedFont = parentFont.resolve(defaultFont);
@@ -569,7 +569,7 @@ QFont QQuickTextArea::font() const
 void QQuickTextArea::setFont(const QFont &font)
 {
     Q_D(QQuickTextArea);
-    if (d->extra.value().requestedFont.resolve() == font.resolve() && d->extra.value().requestedFont == font)
+    if (d->extra.value().requestedFont.resolveMask() == font.resolveMask() && d->extra.value().requestedFont == font)
         return;
 
     d->extra.value().requestedFont = font;
diff --git a/src/quicktemplates2/qquicktextarea_p_p.h b/src/quicktemplates2/qquicktextarea_p_p.h
index 02c77b07f..2ed2b44f3 100644
--- a/src/quicktemplates2/qquicktextarea_p_p.h
+++ b/src/quicktemplates2/qquicktextarea_p_p.h
@@ -98,7 +98,7 @@ public:
     void inheritFont(const QFont &font);
     void updateFont(const QFont &font);
     inline void setFont_helper(const QFont &font) {
-        if (sourceFont.resolve() == font.resolve() && sourceFont == font)
+        if (sourceFont.resolveMask() == font.resolveMask() && sourceFont == font)
             return;
         updateFont(font);
     }
diff --git a/src/quicktemplates2/qquicktextfield.cpp b/src/quicktemplates2/qquicktextfield.cpp
index c8e610948..47026e1be 100644
--- a/src/quicktemplates2/qquicktextfield.cpp
+++ b/src/quicktemplates2/qquicktextfield.cpp
@@ -222,7 +222,7 @@ void QQuickTextFieldPrivate::resolveFont()
 void QQuickTextFieldPrivate::inheritFont(const QFont &font)
 {
     QFont parentFont = extra.isAllocated() ? extra->requestedFont.resolve(font) : font;
-    parentFont.resolve(extra.isAllocated() ? extra->requestedFont.resolve() | font.resolve() : font.resolve());
+    parentFont.setResolveMask(extra.isAllocated() ? extra->requestedFont.resolveMask() | font.resolveMask() : font.resolveMask());
 
     const QFont defaultFont = QQuickTheme::font(QQuickTheme::TextField);
     QFont resolvedFont = parentFont.resolve(defaultFont);
@@ -429,7 +429,7 @@ QFont QQuickTextField::font() const
 void QQuickTextField::setFont(const QFont &font)
 {
     Q_D(QQuickTextField);
-    if (d->extra.value().requestedFont.resolve() == font.resolve() && d->extra.value().requestedFont == font)
+    if (d->extra.value().requestedFont.resolveMask() == font.resolveMask() && d->extra.value().requestedFont == font)
         return;
 
     d->extra.value().requestedFont = font;
diff --git a/src/quicktemplates2/qquicktextfield_p_p.h b/src/quicktemplates2/qquicktextfield_p_p.h
index a816614da..d81289726 100644
--- a/src/quicktemplates2/qquicktextfield_p_p.h
+++ b/src/quicktemplates2/qquicktextfield_p_p.h
@@ -94,7 +94,7 @@ public:
     void inheritFont(const QFont &font);
     void updateFont(const QFont &font);
     inline void setFont_helper(const QFont &font) {
-        if (sourceFont.resolve() == font.resolve() && sourceFont == font)
+        if (sourceFont.resolveMask() == font.resolveMask() && sourceFont == font)
             return;
         updateFont(font);
     }
diff --git a/src/quicktemplates2/qquicktheme.cpp b/src/quicktemplates2/qquicktheme.cpp
index f8c4a251f..b80e87e60 100644
--- a/src/quicktemplates2/qquicktheme.cpp
+++ b/src/quicktemplates2/qquicktheme.cpp
@@ -131,7 +131,7 @@ QFont QQuickTheme::font(Scope scope)
     if (font) {
         QFont f = *font;
         if (scope == System)
-            f.resolve(0);
+            f.setResolveMask(0);
         return f;
     }
 
@@ -152,7 +152,7 @@ QPalette QQuickTheme::palette(Scope scope)
     if (palette) {
         QPalette f = *palette;
         if (scope == System)
-            f.resolve(0);
+            f.setResolveMask(0);
         return f;
     }
 
